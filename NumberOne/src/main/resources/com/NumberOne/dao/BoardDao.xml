<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace ="com.NumberOne.dao.BoardDao">
 	
 	<select id="selectNoticeList" resultType="com.NumberOne.dto.NoticeDto">
 		<!-- 공지 게시글 목록 조회 -->
 		SELECT NBCODE,NBMID,NBTITLE,NBCONTENTS,TO_CHAR(NBDATE,'YY-MM-DD') AS NBDATE,
 			   NBIMG,NBSTATE,NBHITS,NBFIX
 		FROM NOTICEBOARDS
 		ORDER BY NBCODE DESC
 	</select>
 		<!-- 카테고리별(자유,질문,정보,후기) 글목록 조회 -->
 	<select id="selectBoardList_Free" resultType="com.NumberOne.dto.BoardDto">
 		<!-- 자유 게시글 목록 조회  -->
 		SELECT BDCODE, BDRGCODE, BDCATEGORY, BDMID, BDTITLE, BDCONTENTS, 
			   TO_CHAR(BDDATE,'YY-MM-DD') AS BDDATE, 
			   BDIMG, BDDETAILIMG, BDSTATE, BDHITS, 
		       MB.MNICKNAME AS BDNICKNAME, 
		       NVL(RPCOUNT.BDRPCOUNT, 0) AS BDRPCOUNT,
		       NVL(RCCOUNT.BDRCCOUNT, 0) AS BDRCCOUNT
		FROM BOARDS BD 
		LEFT OUTER JOIN MEMBERS MB 
		ON BD.BDMID = MB.MID
		LEFT OUTER JOIN (SELECT BD.BDCODE AS RPBDCODE, COUNT(*) AS BDRPCOUNT
		                        FROM BOARDS BD LEFT OUTER JOIN REPLY RP
		                        ON BD.BDCODE = RP.RPBDCODE
		                        WHERE RP.RPSTATE = 1
		                        GROUP BY BD.BDCODE
		                        ORDER BY BD.BDCODE) RPCOUNT
		ON BD.BDCODE = RPCOUNT.RPBDCODE
		LEFT OUTER JOIN (SELECT RCBDCODE, COUNT(*) AS BDRCCOUNT
		                        FROM RECOMMEND
		                        GROUP BY RCBDCODE ) RCCOUNT
		ON BD.BDCODE = RCCOUNT.RCBDCODE
		WHERE BD.BDSTATE = 1
		AND BD.BDCATEGORY = #{bdcategory_Free}
		ORDER BY BDCODE DESC
 	</select>
 	<select id="selectBoardList_Question" resultType="com.NumberOne.dto.BoardDto">
 		<!-- 질문 게시글 목록 조회  -->
 		SELECT BDCODE, BDRGCODE, BDCATEGORY, BDMID, BDTITLE, BDCONTENTS, 
			   TO_CHAR(BDDATE,'YY-MM-DD') AS BDDATE, 
			   BDIMG, BDDETAILIMG, BDSTATE, BDHITS, 
		       MB.MNICKNAME AS BDNICKNAME, 
		       NVL(RPCOUNT.BDRPCOUNT, 0) AS BDRPCOUNT,
		       NVL(RCCOUNT.BDRCCOUNT, 0) AS BDRCCOUNT
		FROM BOARDS BD 
		LEFT OUTER JOIN MEMBERS MB 
		ON BD.BDMID = MB.MID
		LEFT OUTER JOIN (SELECT BD.BDCODE AS RPBDCODE, COUNT(*) AS BDRPCOUNT
		                        FROM BOARDS BD LEFT OUTER JOIN REPLY RP
		                        ON BD.BDCODE = RP.RPBDCODE
		                        WHERE RP.RPSTATE = 1
		                        GROUP BY BD.BDCODE
		                        ORDER BY BD.BDCODE) RPCOUNT
		ON BD.BDCODE = RPCOUNT.RPBDCODE
		LEFT OUTER JOIN (SELECT RCBDCODE, COUNT(*) AS BDRCCOUNT
		                        FROM RECOMMEND
		                        GROUP BY RCBDCODE ) RCCOUNT
		ON BD.BDCODE = RCCOUNT.RCBDCODE
		WHERE BD.BDSTATE = 1
		AND BD.BDCATEGORY = #{bdcategory_Question}
		ORDER BY BD.BDCODE DESC
 	</select>
 	<select id="selectBoardList_Information" resultType="com.NumberOne.dto.BoardDto">
 		<!--정보 게시글 목록 조회  -->
 		SELECT BDCODE, BDRGCODE, BDCATEGORY, BDMID, BDTITLE, BDCONTENTS, 
			   TO_CHAR(BDDATE,'YY-MM-DD') AS BDDATE, 
			   BDIMG, BDDETAILIMG, BDSTATE, BDHITS, 
		       MB.MNICKNAME AS BDNICKNAME, 
		       NVL(RPCOUNT.BDRPCOUNT, 0) AS BDRPCOUNT,
		       NVL(RCCOUNT.BDRCCOUNT, 0) AS BDRCCOUNT
		FROM BOARDS BD 
		LEFT OUTER JOIN MEMBERS MB 
		ON BD.BDMID = MB.MID
		LEFT OUTER JOIN (SELECT BD.BDCODE AS RPBDCODE, COUNT(*) AS BDRPCOUNT
		                        FROM BOARDS BD LEFT OUTER JOIN REPLY RP
		                        ON BD.BDCODE = RP.RPBDCODE
		                        WHERE RP.RPSTATE = 1
		                        GROUP BY BD.BDCODE
		                        ORDER BY BD.BDCODE) RPCOUNT
		ON BD.BDCODE = RPCOUNT.RPBDCODE
		LEFT OUTER JOIN (SELECT RCBDCODE, COUNT(*) AS BDRCCOUNT
		                        FROM RECOMMEND
		                        GROUP BY RCBDCODE ) RCCOUNT
		ON BD.BDCODE = RCCOUNT.RCBDCODE
		WHERE BD.BDSTATE = 1
		AND BD.BDCATEGORY = #{bdcategory_Infomation}
		ORDER BY BD.BDCODE DESC
 	</select>
 	<select id="selectBoardList_Review" resultType="com.NumberOne.dto.BoardDto">
 		<!--후기 게시글 목록 조회  -->
 		SELECT BDCODE, BDRGCODE, BDCATEGORY, BDMID, BDTITLE, BDCONTENTS, 
			   TO_CHAR(BDDATE,'YY-MM-DD') AS BDDATE, 
			   BDIMG, BDDETAILIMG, BDSTATE, BDHITS, 
		       MB.MNICKNAME AS BDNICKNAME, 
		       NVL(RPCOUNT.BDRPCOUNT, 0) AS BDRPCOUNT,
		       NVL(RCCOUNT.BDRCCOUNT, 0) AS BDRCCOUNT
		FROM BOARDS BD 
		LEFT OUTER JOIN MEMBERS MB 
		ON BD.BDMID = MB.MID
		LEFT OUTER JOIN (SELECT BD.BDCODE AS RPBDCODE, COUNT(*) AS BDRPCOUNT
		                        FROM BOARDS BD LEFT OUTER JOIN REPLY RP
		                        ON BD.BDCODE = RP.RPBDCODE
		                        WHERE RP.RPSTATE = 1
		                        GROUP BY BD.BDCODE
		                        ORDER BY BD.BDCODE) RPCOUNT
		ON BD.BDCODE = RPCOUNT.RPBDCODE
		LEFT OUTER JOIN (SELECT RCBDCODE, COUNT(*) AS BDRCCOUNT
		                        FROM RECOMMEND
		                        GROUP BY RCBDCODE ) RCCOUNT
		ON BD.BDCODE = RCCOUNT.RCBDCODE
		WHERE BD.BDSTATE = 1
		AND BD.BDCATEGORY = #{bdcategory_Review}
		ORDER BY BD.BDCODE DESC
 	</select>
 	<!-- 페이징처리 후 전체 글목록 조회 -->
 	<select id="selectBoardList_Paging" resultType="com.NumberOne.dto.BoardDto">
 		<!-- 페이징(글정렬 + 글검색) -->
 		SELECT * 
		FROM (
				SELECT ROWNUM RN,VIEW_LATESTBOARDLIST.*
				FROM VIEW_LATESTBOARDLIST )
	 	WHERE RN BETWEEN ${startRow} AND ${endRow}
 		<!-- 검색어, 혹은 정렬 값이 있을 시 -->
 		<if test="keyword.length > 0 or searchVal == '자유' or searchVal == '질문' or searchVal == '정보' or searchVal == '후기' ">
				AND 
				<!-- 검색한 키워드 정렬 -->
				<if test="keyword.length > 0">
					<choose>
						<when test="searchType == 'bdTitleContents' ">
							(BDTITLE LIKE '%'||#{keyword}||'%' OR BDCONTENTS LIKE '%'||#{keyword}||'%')
						</when>
						
						<when test="searchType == 'bdNickname' ">
							BDNICKNAME LIKE '%'||#{keyword}||'%'
						</when>
						
						<otherwise>
							${searchType} LIKE '%'||#{keyword}||'%'
						</otherwise>	
					</choose>
					
					<!-- 검색어 입력한 상태에서 정렬 -->
					<if test="searchVal == '자유' or searchVal == '질문' or searchVal == '정보' or searchVal == '후기' ">
					AND
					</if>
					
				</if>
				<!-- 상태값 정렬 -->
				
				<if test="searchVal == '자유' ">
					BDCATEGORY = '자유'
				</if>
				<if test="searchVal == '질문' ">
					BDCATEGORY = '질문'
				</if>
				<if test="searchVal == '정보' ">
					BDCATEGORY = '정보'
				</if>
				<if test="searchVal == '후기' ">
					BDCATEGORY = '후기'
				</if>
			</if>
		
 	</select>
 	
 	<!-- 페이징처리 후 전체 공지 글목록 조회 -->
 	<select id="selectNoticeBoardList" resultType="com.NumberOne.dto.NoticeDto">
		
		SELECT * 
		FROM (
				SELECT NBCODE,NBMID,NBTITLE,NBCONTENTS,TO_CHAR(NBDATE,'YY-MM-DD') AS NBDATE,
 			   			NBIMG,NBSTATE,NBHITS,NBFIX, ROWNUM RN
 				FROM NOTICEBOARDS
 				
 		<if test="keyword.length > 0">
 			WHERE 
 			<choose>
 				<when test="searchType == 'nbTitleContents' ">
 					(NBTITLE LIKE '%'||#{keyword}||'%' OR NBCONTENTS LIKE '%'||#{keyword}||'%')
 				</when>
 				
 				<otherwise>
					${searchType} LIKE '%'||#{keyword}||'%'
				</otherwise>
 			</choose>
 		</if>
		ORDER BY NBCODE DESC )
		
		WHERE RN BETWEEN ${startRow} AND ${endRow}
	</select>
	
 	 <select id="selectRoomList" resultType="com.NumberOne.dto.BoardDto">
 	 	<!-- 자랑글 목록 -->
 	 	select bdcode, bdmid, bdtitle, bddate, bdimg, bdstate, bdhits, bdcontents,
		bdscrap, bdrecommend, bdreply, mnickname as bdnickname   	
		from boards b
		left outer join (select scbdcode, count(*) as bdscrap from scrap group by scbdcode) sc
		on b.bdcode = sc.scbdcode
		left outer join (select rcbdcode, count(*) as bdrecommend from recommend group by rcbdcode) rc
		on b.bdcode = rc.rcbdcode
		left outer join (select rpbdcode, count(*) as bdreply from reply WHERE RPSTATE=1 group by rpbdcode) rp
		on b.bdcode = rp.rpbdcode
		left outer join members m
		on b.bdmid = m.mid
		where b.bdcategory='자랑'
		and b.bdstate='1'
		order by bdcode desc
	 </select>
 	 
 	 <select id="selectRoomTotalCount" resultType="int">
 	 	select count(*)
 	 	from boards 
 	 	where bdcategory = '자랑' 
 	 	and bdstate = '1'
 	 </select>
 	 
 	 <select id="selectRoomList_paging" resultType="com.NumberOne.dto.BoardDto">
 	 	<!-- 자랑글 목록 페이징 -->
 	 	select * from (select rownum rn, b.* from (select bdcode, bdmid, bdtitle, bddate, bdimg, bdstate, bdhits, bdcontents,
		bdscrap, bdrecommend, bdreply, mnickname as bdnickname   	
		from boards b
		left outer join (select scbdcode, count(*) as bdscrap from scrap group by scbdcode) sc
		on b.bdcode = sc.scbdcode
		left outer join (select rcbdcode, count(*) as bdrecommend from recommend group by rcbdcode) rc
		on b.bdcode = rc.rcbdcode
		left outer join (select rpbdcode, count(*) as bdreply from reply group by rpbdcode) rp
		on b.bdcode = rp.rpbdcode
		left outer join members m
		on b.bdmid = m.mid
		where b.bdcategory='자랑'
		and b.bdstate='1'
		
		<!-- 정렬 선택 -->
		order by ${searchVal} desc nulls last) b)
		
		<!-- 요청한 페이지에서 출력할 글만 조회 -->		
        where rn between #{startRow} and #{endRow}
	 </select>
 	 
 	 
 	 <!-- !!자꾸 중복되는 메소드 -->
 	 <select id="selectNoticeBoardView" resultType="com.NumberOne.dto.NoticeDto">	
	 	 <!-- 공지글 상세 -->
	 	 SELECT NBCODE,NBMID,NBTITLE,NBCONTENTS,TO_CHAR(NBDATE,'YY-MM-DD HH24:MI') AS NBDATE,
 			   NBIMG,NBSTATE,NBHITS,MB.MNICKNAME AS NBNICKNAME, NBFIX
	 	 FROM NOTICEBOARDS NB, MEMBERS MB
	 	 WHERE NBCODE = #{nbcode} AND NB.NBMID = MB.MID
 	 </select>
 	 
 	 <select id="selectBoardView" resultType="com.NumberOne.dto.BoardDto">
 	 	<!-- 일반글 상세 -->
		SELECT BDCODE, BDRGCODE, BDCATEGORY, BDMID, BDTITLE, BDCONTENTS, TO_CHAR(BDDATE,'YY-MM-DD HH24:MI') AS BDDATE, 
	    	   BDIMG, BDDETAILIMG, BDSTATE, BDHITS, BDRATE,
	    	   MB.MNICKNAME AS BDNICKNAME, MB.MPROFILE AS BDMPROFILE, MB.MSTATE AS BDMSTATE,
	    	   RG.RGCODE AS BDRGCODE, RG.RGNAME AS BDRGNAME
		FROM BOARDS BD, MEMBERS MB, REGION RG
		WHERE BD.BDMID = MB.MID
        AND BD.BDRGCODE = RG.RGCODE
		AND BD.BDCODE = #{bdcode}
 	 </select>
 	 
 	 <select id="selectRoomView" resultType="com.NumberOne.dto.BoardDto">
 	 	<!-- 자랑글 상세 -->
 	 	select bdcode, bdmid, bdtitle, bddate, bdimg, bdstate, bdhits, bdcontents, bddetailimg,
		bdscrap, bdrecommend, bdreply, m.mnickname as bdnickname, m.mprofile as bdmprofile,
        sh.scmid as schistory, rch.rcmid as rchistory, wbh.wbmid as wbhistory
		from boards b
		left outer join (select scbdcode, count(*) as bdscrap from scrap group by scbdcode) sc
		on b.bdcode = sc.scbdcode
		left outer join (select rcbdcode, count(*) as bdrecommend from recommend group by rcbdcode) rc
		on b.bdcode = rc.rcbdcode
		left outer join (select rpbdcode, count(*) as bdreply from reply group by rpbdcode) rp
		on b.bdcode = rp.rpbdcode
		left outer join members m
		on b.bdmid = m.mid
        left outer join (select * from scrap where scmid=#{loginId}) sh on b.bdcode = sh.scbdcode
        left outer join (select * from recommend where rcmid=#{loginId}) rch on b.bdcode = rch.rcbdcode
        left outer join (select * from warningboards where wbmid=#{loginId}) wbh on b.bdcode = wbh.wbedbdcode
        
		where b.bdcategory='자랑'
		and b.bdstate='1'
        and b.bdcode=#{bdcode}
        order by bdcode desc
 	 </select>

 	 <select id="selectReplyMaxNumber" resultType="String">
 	 	<!-- 댓글 최대번호 조회 -->
 	 	SELECT MAX(RPCODE) 
 	 	FROM REPLY
 	 </select>
 	 
 	<insert id="insertBoardReply_ajax">
 		<!-- 댓글등록 -->
 		INSERT INTO REPLY(RPCODE, RPBDCODE, RPCONTENTS, RPMID, RPDATE)
 		VALUES ( #{rpcode}, #{rpbdcode}, #{rpcontents}, #{rpmid}, SYSDATE )
 	</insert>
 	
 	<select id="selectBoardReplyList" resultType="com.NumberOne.dto.ReplyDto">
 		<!-- 댓글목록 조회 -->
 		SELECT RP.*, MB.MNICKNAME AS RPNICKNAME, 
 			   MB.MPROFILE AS RPPROFILE, MB.MSTATE AS RPMSTATE 
		FROM REPLY RP, MEMBERS MB 
		WHERE RP.RPMID = MB.MID
		AND RPBDCODE = #{bdcode}
		AND RPSTATE = 1
 		ORDER BY RPCODE 
 	</select>
 	
 	<select id="selectReplyCount_ajax" resultType="int">
 		<!-- 댓글개수 조회 -->
 		SELECT COUNT(*)
		FROM REPLY 
		WHERE RPBDCODE = #{bdcode}
		AND RPSTATE = 1 

 	</select>
 	 
 	<update id="updateReplyState_ajax">
 		<!-- 댓글삭제 -->
 		UPDATE REPLY 
 		SET RPSTATE = 2
 		WHERE RPCODE = #{rpcode}
 	</update> 
 	 
 	<insert id="insertBoardRecommend_ajax">
 		<!-- 게시글 추천 -->
 		INSERT INTO RECOMMEND
 		VALUES ( #{loginId}, #{bdcode} )
 	</insert> 
 	
 	<delete id="deleteBoardRecommend_ajax">
 		<!-- 게시글 추천 삭제 -->
 		DELETE FROM RECOMMEND
 		WHERE RCMID = #{loginId} AND RCBDCODE = #{bdcode}
 	</delete>
 	
 	<select id="checkBoardRecommend_ajax" resultType = "String">
 		<!-- 게시글 추천 유무 확인  -->
 		SELECT RCBDCODE
 		FROM RECOMMEND
 		WHERE RCMID = #{loginId}
 		AND RCBDCODE = #{bdcode}
 	</select>
 	
 	<select id="checkBoardWarning_ajax" resultType = "String">
		<!-- 게시글 신고 유무 확인 --> 		
 		SELECT WBEDBDCODE
 		FROM WARNINGBOARDS
 		WHERE WBMID = #{loginId}
 		AND WBEDBDCODE = #{bdcode}
 	</select>
 	
 	<insert id="insertBoardWarning_ajax">
 		<!-- 게시글 신고 -->
 		INSERT INTO WARNINGBOARDS 
 		VALUES ( #{loginId}, #{bdcode} )
 	</insert>
 	 
 	<delete id="deleteBoardWarning_ajax">
 		<!-- 게시글 신고 취소 -->
 		DELETE FROM WARNINGBOARDS
 		WHERE WBMID = #{loginId}
 		AND WBEDBDCODE = #{bdcode}
 	</delete>
 	 
 	<select id="selectBoardRecommendCount_ajax" resultType="int">
 		<!-- 게시글 추천수 조회 -->
 		SELECT COUNT(*)
		FROM RECOMMEND
		WHERE RCBDCODE = #{bdcode}
 	</select>
 	 
 	<update id="updateBoardDelete">
 		<!-- 게시글 삭제(상태 변경) -->
 		UPDATE BOARDS
 		SET BDSTATE = 2
 		WHERE BDCODE = #{bdcode}
 	</update>
 	 
	<update id="updateBoardModify">
		<!-- 게시글 수정 -->
		UPDATE BOARDS
		SET BDCATEGORY = #{bdcategory},
		BDRGCODE = #{bdrgcode},
		BDTITLE = #{bdtitle},
		BDCONTENTS = #{bdcontents},
		BDRATE = #{bdrate}
		WHERE BDCODE = #{bdcode}
	</update>
	
	<insert id="insertBoard">
		<!-- 게시글 작성 -->
		INSERT INTO BOARDS (BDCODE, BDRGCODE, BDCATEGORY, BDMID, BDTITLE, BDCONTENTS, BDDATE, BDIMG, BDRATE)
		VALUES ( #{bdcode}, #{bdrgcode}, #{bdcategory}, #{bdmid}, #{bdtitle}, #{bdcontents}, SYSDATE, #{bdimg}, #{bdrate} )
		
	</insert>
	
 	<update id="updateRoomhits">
 		<!-- 조회수 올리기-->
 		UPDATE Boards
 		SET bdhits = bdhits +1
 		WHERE bdCODE = #{bdcode}
 	</update> 

	<select id="selectCurrentHisroty" resultType="String">
		select count(*) from 
		
		<if test="history == 'rchistory' ">
			recommend where rcbdcode = #{bdcode} 
			and rcmid=#{loginId}
		</if>
		<if test="history == 'schistory'">	
			scrap where scbdcode = #{bdcode}
			and scmid=#{loginId}
		</if>	
		<if test="history == 'wbhistory'">
			warningboards where wbedbdcode=#{bdcode}
			and wbmid=#{loginId}
		</if>	
	</select>
	
	<delete id="deleteState">
		delete from 
		<if test="history == 'rchistory' ">
			recommend where rcbdcode = #{bdcode} 
			and rcmid=#{loginId}
		</if>
		<if test="history == 'schistory'">	
			scrap where scbdcode = #{bdcode}
			and scmid=#{loginId}
		</if>	
		<if test="history == 'wbhistory'">
			warningboards where wbedbdcode=#{bdcode}
			and wbmid=#{loginId}
		</if>
	</delete>
	
	<insert id="insertState">
		insert into 
		<if test="history == 'rchistory' ">
			recommend 
		</if>
		<if test="history == 'schistory'">	
			scrap 
		</if>	
		<if test="history == 'wbhistory'">
			warningboards
		</if>
		values (#{loginId}, #{bdcode})
	</insert>

	<update id="updateBoardHits">
		<!-- 게시글 조회수 증가 -->
		UPDATE BOARDS
		SET BDHITS = BDHITS + 1
		WHERE BDCODE = #{bdcode}
	</update>
	
	<update id="updateNoticeBdHits">
		<!-- 공지글 조회수 증가 -->
		UPDATE NOTICEBOARDS
		SET NBHITS = NBHITS + 1
		WHERE NBCODE = #{nbcode}
	</update>
	
	<select id="selectRpContents_ajax" resultType="com.NumberOne.dto.ReplyDto">
		<!-- 댓글정보 조회 -->
		SELECT RPCODE, RPBDCODE, RPCONTENTS, RPMID, RPDATE, RPSTATE
		FROM REPLY
		WHERE RPCODE = #{rpcode}
	</select>
	
	<update id="updateRpcontents_ajax">
		<!-- 댓글수정 -->
		UPDATE REPLY
		SET RPCONTENTS = #{rpcontents} 
		WHERE RPCODE = #{rpcode}
	</update>
	
	<select id="selectRegionBoardList" resultType="com.NumberOne.dto.BoardDto">
		SELECT BDCODE, BDRGCODE, BDCATEGORY, BDMID, BDTITLE, BDCONTENTS, 
			   TO_CHAR(BDDATE,'YY-MM-DD') AS BDDATE, 
			   BDIMG, BDDETAILIMG, BDSTATE, BDHITS, 
		       RG.RGNAME AS BDRGNAME, 
		       MB.MNICKNAME AS BDNICKNAME, 
		       NVL(RPCOUNT.BDRPCOUNT, 0) AS BDRPCOUNT,
		       NVL(RCCOUNT.BDRCCOUNT, 0) AS BDRCCOUNT
		FROM BOARDS BD
		LEFT OUTER JOIN REGION RG
		ON BD.BDRGCODE = RG.RGCODE
		LEFT OUTER JOIN MEMBERS MB
		ON BD.BDMID = MB.MID
		LEFT OUTER JOIN (SELECT BD.BDCODE AS RPBDCODE, COUNT(*) AS BDRPCOUNT
		                        FROM BOARDS BD LEFT OUTER JOIN REPLY RP
		                        ON BD.BDCODE = RP.RPBDCODE
		                        WHERE RP.RPSTATE = 1
		                        GROUP BY BD.BDCODE
		                        ORDER BY BD.BDCODE) RPCOUNT
		ON BD.BDCODE = RPCOUNT.RPBDCODE
		LEFT OUTER JOIN (SELECT BD.BDCODE AS RPBDCODE, COUNT(*) AS BDRPCOUNT
		                        FROM BOARDS BD LEFT OUTER JOIN REPLY RP
		                        ON BD.BDCODE = RP.RPBDCODE
		                        WHERE RP.RPSTATE = 1
		                        GROUP BY BD.BDCODE
		                        ORDER BY BD.BDCODE) RPCOUNT
		ON BD.BDCODE = RPCOUNT.RPBDCODE
		LEFT OUTER JOIN (SELECT RCBDCODE, COUNT(*) AS BDRCCOUNT
		                        FROM RECOMMEND
		                        GROUP BY RCBDCODE ) RCCOUNT
		ON BD.BDCODE = RCCOUNT.RCBDCODE
		WHERE BDSTATE = 1
		AND BDCATEGORY NOT IN ('자랑')
		
		<if test="bdrgcode != null ">
			AND RG.RGCODE = #{bdrgcode}
		</if>
		ORDER BY BDCODE DESC
	</select>
	
	<update id="updateRoomView">
		<!-- 자랑글 수정 -->
		UPDATE BOARDS
		SET BDTITLE = #{bdtitle},
		BDCONTENTS = #{bdcontents},
		BDIMG = #{bdimg},
		BDDETAILIMG = #{bddetailimg}
		WHERE BDCODE = #{bdcode}
	</update>
	
	<select id="selectRegionBoardList_ajax" resultType="com.NumberOne.dto.BoardDto">
		<!-- 지역카테고리 목록  -->
		SELECT BDCODE, BDRGCODE, BDCATEGORY, BDMID, BDTITLE, BDCONTENTS, 
			   TO_CHAR(BDDATE,'YY-MM-DD') AS BDDATE, 
			   BDIMG, BDDETAILIMG, BDSTATE, BDHITS, 
		       RG.RGNAME AS BDRGNAME, 
		       MB.MNICKNAME AS BDNICKNAME, 
		       NVL(RPCOUNT.BDRPCOUNT, 0) AS BDRPCOUNT,
		       NVL(RCCOUNT.BDRCCOUNT, 0) AS BDRCCOUNT
		FROM BOARDS BD
		LEFT OUTER JOIN REGION RG
		ON BD.BDRGCODE = RG.RGCODE
		LEFT OUTER JOIN MEMBERS MB
		ON BD.BDMID = MB.MID
		LEFT OUTER JOIN (SELECT BD.BDCODE AS RPBDCODE, COUNT(*) AS BDRPCOUNT
		                        FROM BOARDS BD LEFT OUTER JOIN REPLY RP
		                        ON BD.BDCODE = RP.RPBDCODE
		                        WHERE RP.RPSTATE = 1
		                        GROUP BY BD.BDCODE
		                        ORDER BY BD.BDCODE) RPCOUNT
		ON BD.BDCODE = RPCOUNT.RPBDCODE
		LEFT OUTER JOIN (SELECT BD.BDCODE AS RPBDCODE, COUNT(*) AS BDRPCOUNT
		                        FROM BOARDS BD LEFT OUTER JOIN REPLY RP
		                        ON BD.BDCODE = RP.RPBDCODE
		                        WHERE RP.RPSTATE = 1
		                        GROUP BY BD.BDCODE
		                        ORDER BY BD.BDCODE) RPCOUNT
		ON BD.BDCODE = RPCOUNT.RPBDCODE
		LEFT OUTER JOIN (SELECT RCBDCODE, COUNT(*) AS BDRCCOUNT
		                        FROM RECOMMEND
		                        GROUP BY RCBDCODE ) RCCOUNT
		ON BD.BDCODE = RCCOUNT.RCBDCODE
		WHERE BDSTATE = 1
		AND BDCATEGORY NOT IN ('자랑')
		AND RG.RGCODE = #{rgcode}
		ORDER BY BDCODE DESC
		
	</select>	
	
	<select id="selectRegionSearchList" resultType="com.NumberOne.dto.BoardDto">
		<!-- 지역게시판 검색결과 -->
		SELECT BDCODE, BDRGCODE, BDCATEGORY, BDMID, BDTITLE, BDCONTENTS, 
		   TO_CHAR(BDDATE,'YY-MM-DD') AS BDDATE, 
		   BDIMG, BDDETAILIMG, BDSTATE, BDHITS, 
	       MB.MNICKNAME AS BDNICKNAME, 
	       NVL(RPCOUNT.BDRPCOUNT, 0) AS BDRPCOUNT,
	       NVL(RCCOUNT.BDRCCOUNT, 0) AS BDRCCOUNT,
	       RG.RGCODE, RG.RGNAME AS BDRGNAME
		FROM BOARDS BD 
		LEFT OUTER JOIN MEMBERS MB 
		ON BD.BDMID = MB.MID
		LEFT OUTER JOIN REGION RG
		ON BD.BDRGCODE = RG.RGCODE
		LEFT OUTER JOIN (SELECT BD.BDCODE AS RPBDCODE, COUNT(*) AS BDRPCOUNT
		                        FROM BOARDS BD LEFT OUTER JOIN REPLY RP
		                        ON BD.BDCODE = RP.RPBDCODE
		                        WHERE RP.RPSTATE = 1
		                        GROUP BY BD.BDCODE
		                        ORDER BY BD.BDCODE) RPCOUNT
		ON BD.BDCODE = RPCOUNT.RPBDCODE
		LEFT OUTER JOIN (SELECT RCBDCODE, COUNT(*) AS BDRCCOUNT
		                        FROM RECOMMEND
		                        GROUP BY RCBDCODE ) RCCOUNT
		ON BD.BDCODE = RCCOUNT.RCBDCODE
		WHERE BDCATEGORY NOT IN ( '자랑' )
		
		<if test="bdrgcode != ' ' ">
		AND BD.BDRGCODE = #{bdrgcode}
		</if>
		
 		<if test="searchType == 'bdtitle' ">
 		<!-- 제목으로 검색 -->
 		AND BDTITLE LIKE '%'||#{searchText}||'%'
 		</if>
 		
 		<if test="searchType == 'bdcontents'">
 		<!-- 내용으로 검색 -->
 		AND BDCONTENTS LIKE '%'||#{searchText}||'%'
 		</if>
 		
 		<if test="searchType == 'bdtitlecontents'">
 		<!-- 제목 + 내용으로 검색  -->
 		AND BDTITLE LIKE '%'||#{searchText}||'%'
 		OR BDCONTENTS LIKE '%'||#{searchText}||'%'
 		</if>
 		
 		<if test="searchType == 'bdnickname'">
 		<!-- 닉네임으로 검색 -->
 		AND MB.MNICKNAME LIKE '%'||#{searchText}||'%'
 		</if>
 		
 		AND BDSTATE = 1
 		ORDER BY BDCODE DESC
	</select>
	
	<select id="selectBoardTotalCount" resultType="int">
	<!-- 페이징 위한 일반게시판 총 갯수 조회 ( 자유게시판 글 제외 )  -->
		SELECT COUNT(*)
		FROM BOARDS BD
		LEFT OUTER JOIN MEMBERS MB
		ON BD.BDMID = MB.MID
		WHERE BDCATEGORY NOT IN ('자랑')	
		<if test="keyword.length > 0 or searchVal == '자유' or searchVal == '질문' or searchVal == '정보' or searchVal == '후기' ">
			AND 
			<!-- 검색한 키워드 정렬 -->
			<if test="keyword.length > 0">
				<choose>
					<when test="searchType == 'bdTitleContents'">
						(BDTITLE LIKE '%'||#{keyword}||'%' OR BDCONTENTS LIKE '%'||#{keyword}||'%')
					</when>
					
					<when test="searchType == 'bdNickname' ">
						MNICKNAME LIKE '%'||#{keyword}||'%'
					</when>
					
					<otherwise>
						${searchType} LIKE '%'||#{keyword}||'%'
					</otherwise>				
				</choose>
				<if test="searchVal == '자유' or searchVal == '질문' or searchVal == '정보' or searchVal == '후기'">
						AND
				</if>
			</if>
		</if>
		<!-- 상태값에 따른 정렬 -->
		<if test="searchVal == '자유'">
			BDCATEGORY = '자유'
		</if>
		<if test="searchVal == '질문'">
			BDCATEGORY = '질문'
		</if>
		<if test="searchVal == '정보'">
			BDCATEGORY = '정보'
		</if>
		<if test="searchVal == '후기'">
			BDCATEGORY = '후기'
		</if>
		AND BDSTATE = 1
	</select>
	
	<select id="selectNoticeTotalCount" resultType="int">
	<!-- 페이징 위한 공지게시판 총 갯수 조회 -->
		SELECT COUNT(*)
		FROM NOTICEBOARDS
		<if test="keyword.length > 0 ">
			WHERE 
			<choose>
				<when test="searchType == 'nbTitleContents'">
					(NBTITLE LIKE '%'||#{keyword}||'%' OR NBCONTENTS LIKE '%'||#{keyword}||'%')
				</when>

				<otherwise>
					${searchType} LIKE '%'||#{keyword}||'%'
				</otherwise>	
			</choose>		
		</if>
	</select>
	
	<select id="selectRegionTotalCount" resultType="int">
		<!-- 페이징위한 지역게시판 게시글 총 개수 조회 -->
		SELECT COUNT(*)
		FROM BOARDS BD
		LEFT OUTER JOIN MEMBERS MB
		ON BD.BDMID = MB.MID
		LEFT OUTER JOIN REGION RG
		ON BD.BDRGCODE = RG.RGCODE
		WHERE BDSTATE = 1
		
		<if test="keyword.length > 0 or searchVal == 'ALL' or searchVal == 'SEL' or searchVal == 'ICN' or searchVal == 'GWD' 
					or searchVal == 'CCD' or searchVal == 'GGD' or searchVal == 'JLD' or searchVal == 'GSD' or searchVal == 'JJD'">
			AND
			<!-- 검색한 키워드 정렬 -->
			<if test="keyword.length > 0">
				<choose>
					<when test="searchType == 'bdTitleContents'">
						(BDTITLE LIKE '%'||#{keyword}||'%' OR BDCONTENTS LIKE '%'||#{keyword}||'%')
					</when>
					
					<when test="searchType == 'bdNickname' ">
						MNICKNAME LIKE '%'||#{keyword}||'%'
					</when>
					
					<otherwise>
						${searchType} LIKE '%'||#{keyword}||'%'
					</otherwise>				
				</choose>
				<!-- 검색한 상태에서 정렬 -->
				<if test="searchVal == 'ALL' or searchVal == 'SEL' or searchVal == 'ICN' or searchVal == 'GWD' 
					or searchVal == 'CCD' or searchVal == 'GGD' or searchVal == 'JLD' or searchVal == 'GSD' or searchVal == 'JJD'">
						AND
				</if>
			</if>
		</if>
		<!-- 상태값에 따른 정렬 -->
		<if test="searchVal == 'ALL'">
			RGCODE = 'ALL'
		</if>
		<if test="searchVal == 'SEL'">
			RGCODE = 'SEL'
		</if>
		<if test="searchVal == 'ICN'">
			RGCODE = 'ICN'
		</if>
		<if test="searchVal == 'GWD'">
			RGCODE = 'GWD'
		</if>
		<if test="searchVal == 'CCD'">
			RGCODE = 'CCD'
		</if>
		<if test="searchVal == 'GGD'">
			RGCODE = 'GGD'
		</if>
		<if test="searchVal == 'JLD'">
			RGCODE = 'JLD'
		</if>
		<if test="searchVal == 'GSD'">
			RGCODE = 'GSD'
		</if>
		<if test="searchVal == 'JJD'">
			RGCODE = 'JJD'
		</if>
		
	</select>
		
	<select id="selectRegionBoardList_Paging" resultType="com.NumberOne.dto.BoardDto">
 		<!-- 페이징 처리 후 지역게시판 글목록 조회 -->
 		SELECT * 
		FROM (
				SELECT ROWNUM RN,VIEW_LATESTREGIONBDLIST.*
				FROM VIEW_LATESTREGIONBDLIST )
	 	WHERE RN BETWEEN ${startRow} AND ${endRow}
 		<!-- 검색어, 혹은 정렬 값이 있을 시 -->
 		<if test="keyword.length > 0 or searchVal == 'ALL' or searchVal == 'SEL' or searchVal == 'ICN' or searchVal == 'GWD' 
					or searchVal == 'CCD' or searchVal == 'GGD' or searchVal == 'JLD' or searchVal == 'GSD' or searchVal == 'JJD'">
				AND 
				<!-- 검색한 키워드 정렬 -->
				<if test="keyword.length > 0">
					<choose>
						<when test="searchType == 'bdTitleContents' ">
							(BDTITLE LIKE '%'||#{keyword}||'%' OR BDCONTENTS LIKE '%'||#{keyword}||'%')
						</when>
						
						<when test="searchType == 'bdNickname' ">
							BDNICKNAME LIKE '%'||#{keyword}||'%'
						</when>
						
						<otherwise>
							${searchType} LIKE '%'||#{keyword}||'%'
						</otherwise>	
					</choose>
					
					<!-- 검색어 입력한 상태에서 정렬 -->
					<if test="searchVal == 'ALL' or searchVal == 'SEL' or searchVal == 'ICN' or searchVal == 'GWD' 
					or searchVal == 'CCD' or searchVal == 'GGD' or searchVal == 'JLD' or searchVal == 'GSD' or searchVal == 'JJD'">
					AND
				</if>
			</if>
		</if>
		<!-- 상태값에 따른 정렬 -->
		<if test="searchVal == 'ALL'">
			RGCODE = 'ALL'
		</if>
		<if test="searchVal == 'SEL'">
			RGCODE = 'SEL'
		</if>
		<if test="searchVal == 'ICN'">
			RGCODE = 'ICN'
		</if>
		<if test="searchVal == 'GWD'">
			RGCODE = 'GWD'
		</if>
		<if test="searchVal == 'CCD'">
			RGCODE = 'CCD'
		</if>
		<if test="searchVal == 'GGD'">
			RGCODE = 'GGD'
		</if>
		<if test="searchVal == 'JLD'">
			RGCODE = 'JLD'
		</if>
		<if test="searchVal == 'GSD'">
			RGCODE = 'GSD'
		</if>
		<if test="searchVal == 'JJD'">
			RGCODE = 'JJD'
		</if>
		

	</select>	
		
		
	<select id="selectFixedRoomView" resultType="com.NumberOne.dto.BoardDto">
      SELECT B.BDCODE, M.MNICKNAME AS BDNICKNAME, B.BDTITLE, B.BDIMG
      FROM BOARDS B, MEMBERS M
      WHERE B.BDFIX = 1 AND M.MID=B.BDMID
      ORDER BY BDCODE DESC
   </select>

	
 </mapper>